/*
 * This source file was generated by the Gradle 'init' task
 */
package otus_algo_hw_02;

import org.junit.jupiter.api.Test;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;

class TestTickets {
    @Test void TicketsTest() throws NumberFormatException, IOException 
    {
        long start = System.currentTimeMillis();
        Path resourceDirectory = Paths.get("src","test","resources");
        String absolutePath = resourceDirectory.toFile().getAbsolutePath();
        System.out.println(absolutePath);
        String path = absolutePath + "/1.Tickets/test.";
        for(int i = 0; i < 10; i++)
        {

            int in = 0;
            long out = 0;
            long cout = 0;

            BufferedReader reader_in = new BufferedReader(new FileReader(path + i + ".in"));
            in = (int)Integer.parseInt(reader_in.readLine());
            reader_in.close();
            BufferedReader reader_out = new BufferedReader(new FileReader(path + i + ".out"));
            out = Long.parseLong(reader_out.readLine());
            reader_out.close();
            Tickets ticket = new Tickets(in);
            cout = ticket.GetFastHappyCount();
            assert out == cout;
            System.err.println("java fast count: " + in + " " + cout);
        }
        long end = System.currentTimeMillis();
        double duration_sec = (double)(end - start) / 1000;
        System.out.print("Time: ");
        System.out.print(duration_sec);
        System.out.println(" sec");
    }
}
